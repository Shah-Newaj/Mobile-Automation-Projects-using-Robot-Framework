<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.7 on win32)" generated="20240428 21:33:17.757" rpa="false" schemaversion="3">
<suite id="s1" name="Start-Session" source="C:\Users\newaj\PycharmProjects\Mobile-Automation-Projects-using-Robot-Framework\Contraceptive Coach (COCO) - Which Method\TestCases\Start-Session.robot">
<test id="s1-t1" name="CoCo_Skip Logic - Pattern 1" line="9">
<kw name="Open Application" library="AppiumLibrary">
<arg>http://localhost:4723</arg>
<arg>platformName=Android</arg>
<arg>platformVersion=11</arg>
<arg>deviceName=HA1HSDDT</arg>
<arg>automationName=UiAutomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<msg timestamp="20240428 21:33:17.945" level="TRACE">Arguments: [ 'http://localhost:4723' | platformName='Android' | platformVersion='11' | deviceName='HA1HSDDT' | automationName='UiAutomator2' ]</msg>
<msg timestamp="20240428 21:33:17.945" level="DEBUG">POST http://localhost:4723/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"platformName": "Android", "appium:platformVersion": "11", "appium:deviceName": "HA1HSDDT", "appium:automationName": "UiAutomator2"}}}</msg>
<msg timestamp="20240428 21:33:17.961" level="DEBUG">Starting new HTTP connection (1): localhost:4723</msg>
<msg timestamp="20240428 21:33:27.289" level="DEBUG">http://localhost:4723 "POST /session HTTP/1.1" 200 752</msg>
<msg timestamp="20240428 21:33:27.289" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"platformName":"Android","platformVersion":"11","deviceName":"HA1HSDDT","automationName":"UiAutomator2","platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"Android","platformVersion":"11","deviceName":"HA1HSDDT","automationName":"UiAutomator2"},"deviceUDID":"HA1HSDDT","pixelRatio":"1","statBarHeight":24,"viewportRect":{"left":0,"top":24,"width":600,"height":1000},"deviceApiLevel":30,"deviceManufacturer":"LENOVO","deviceModel":"Lenovo TB-7306F","deviceScreenSize":"600x1024","deviceScreenDensity":160},"sessionId":"9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc"}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '752', 'ETag': 'W/"2f0-FJNcabTe1W9rQ7+BGDmWjPVLyzU"', 'Date': 'Sun, 28 Apr 2024 15:33:27 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:27.289" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:27.289" level="DEBUG">Opened application with session id 9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc</msg>
<msg timestamp="20240428 21:33:27.289" level="TRACE">Return: 1</msg>
<status status="PASS" starttime="20240428 21:33:17.945" endtime="20240428 21:33:27.289"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${btn_app}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:27.289" level="TRACE">Arguments: [ "//android.widget.TextView[@content-desc='COCO']" ]</msg>
<msg timestamp="20240428 21:33:27.289" level="INFO">Clicking element '//android.widget.TextView[@content-desc='COCO']'.</msg>
<msg timestamp="20240428 21:33:27.289" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.TextView[@content-desc='COCO']"}</msg>
<msg timestamp="20240428 21:33:28.324" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:28.324" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04e4-ffff-ffff00000f5e","ELEMENT":"00000000-0000-04e4-ffff-ffff00000f5e"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-j3HEaZ5FUTeYCKcx5XaxwSbOYHg"', 'Date': 'Sun, 28 Apr 2024 15:33:28 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:28.324" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:28.324" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04e4-ffff-ffff00000f5e/click {"id": "00000000-0000-04e4-ffff-ffff00000f5e"}</msg>
<msg timestamp="20240428 21:33:28.402" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04e4-ffff-ffff00000f5e/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:28.402" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:28 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:28.402" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:28.402" level="INFO">xpath criteria: //android.widget.TextView[@content-desc='COCO']</msg>
<msg timestamp="20240428 21:33:28.402" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:27.289" endtime="20240428 21:33:28.402"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:28.402" level="TRACE">Arguments: [ '5 seconds' ]</msg>
<msg timestamp="20240428 21:33:33.402" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20240428 21:33:33.402" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:28.402" endtime="20240428 21:33:33.402"/>
</kw>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>${session}</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20240428 21:33:33.402" level="TRACE">Arguments: [ "//android.widget.ImageView[@content-desc='Session']" ]</msg>
<msg timestamp="20240428 21:33:33.402" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.ImageView[@content-desc='Session']"}</msg>
<msg timestamp="20240428 21:33:33.497" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20240428 21:33:33.497" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12', 'ETag': 'W/"c-ct3goOI+b+kRZv2R9j2fTtMXwkk"', 'Date': 'Sun, 28 Apr 2024 15:33:33 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:33.497" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:33.703" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.ImageView[@content-desc='Session']"}</msg>
<msg timestamp="20240428 21:33:35.114" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:35.114" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-000a00000004","ELEMENT":"00000000-0000-04ec-0000-000a00000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-hmfOtXOE1imjOBrVQNIz0qY37AQ"', 'Date': 'Sun, 28 Apr 2024 15:33:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:35.114" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:35.114" level="INFO">xpath criteria: //android.widget.ImageView[@content-desc='Session']
xpath criteria: //android.widget.ImageView[@content-desc='Session']</msg>
<msg timestamp="20240428 21:33:35.114" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:33.402" endtime="20240428 21:33:35.129"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${session}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:35.129" level="TRACE">Arguments: [ "//android.widget.ImageView[@content-desc='Session']" ]</msg>
<msg timestamp="20240428 21:33:35.129" level="INFO">Clicking element '//android.widget.ImageView[@content-desc='Session']'.</msg>
<msg timestamp="20240428 21:33:35.129" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.ImageView[@content-desc='Session']"}</msg>
<msg timestamp="20240428 21:33:35.255" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:35.270" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-000a00000004","ELEMENT":"00000000-0000-04ec-0000-000a00000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-hmfOtXOE1imjOBrVQNIz0qY37AQ"', 'Date': 'Sun, 28 Apr 2024 15:33:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:35.270" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:35.270" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-000a00000004/click {"id": "00000000-0000-04ec-0000-000a00000004"}</msg>
<msg timestamp="20240428 21:33:40.848" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-000a00000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:40.848" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:40.848" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:40.858" level="INFO">xpath criteria: //android.widget.ImageView[@content-desc='Session']</msg>
<msg timestamp="20240428 21:33:40.858" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:35.129" endtime="20240428 21:33:40.858"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:40.858" level="TRACE">Arguments: [ '3 seconds' ]</msg>
<msg timestamp="20240428 21:33:43.862" level="INFO">Slept 3 seconds</msg>
<msg timestamp="20240428 21:33:43.862" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:40.858" endtime="20240428 21:33:43.862"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${btn_skip}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:43.862" level="TRACE">Arguments: [ "//android.widget.Button[@content-desc='Skip the tutorial']" ]</msg>
<msg timestamp="20240428 21:33:43.862" level="INFO">Clicking element '//android.widget.Button[@content-desc='Skip the tutorial']'.</msg>
<msg timestamp="20240428 21:33:43.862" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.Button[@content-desc='Skip the tutorial']"}</msg>
<msg timestamp="20240428 21:33:43.987" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:43.987" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-001d00000004","ELEMENT":"00000000-0000-04ec-0000-001d00000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-H/koT0woFl8wf7w2ba3lrrseJVM"', 'Date': 'Sun, 28 Apr 2024 15:33:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:43.987" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:43.987" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-001d00000004/click {"id": "00000000-0000-04ec-0000-001d00000004"}</msg>
<msg timestamp="20240428 21:33:44.863" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-001d00000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:44.879" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:44 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:44.879" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:44.879" level="INFO">xpath criteria: //android.widget.Button[@content-desc='Skip the tutorial']</msg>
<msg timestamp="20240428 21:33:44.879" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:43.862" endtime="20240428 21:33:44.879"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:44.879" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:33:46.881" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:33:46.881" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:44.879" endtime="20240428 21:33:46.881"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${startsession}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:46.881" level="TRACE">Arguments: [ "//android.widget.Button[@content-desc='Start session']" ]</msg>
<msg timestamp="20240428 21:33:46.881" level="INFO">Clicking element '//android.widget.Button[@content-desc='Start session']'.</msg>
<msg timestamp="20240428 21:33:46.881" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.Button[@content-desc='Start session']"}</msg>
<msg timestamp="20240428 21:33:47.006" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:47.006" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-002800000004","ELEMENT":"00000000-0000-04ec-0000-002800000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-sKdFlb+x5sxX/Wj085Hb/WDA9lo"', 'Date': 'Sun, 28 Apr 2024 15:33:47 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:47.006" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:47.006" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-002800000004/click {"id": "00000000-0000-04ec-0000-002800000004"}</msg>
<msg timestamp="20240428 21:33:47.074" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-002800000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:47.074" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:47 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:47.074" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:47.074" level="INFO">xpath criteria: //android.widget.Button[@content-desc='Start session']</msg>
<msg timestamp="20240428 21:33:47.074" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:46.881" endtime="20240428 21:33:47.074"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:47.074" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:33:49.088" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:33:49.088" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:47.074" endtime="20240428 21:33:49.088"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${birthyear}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:49.088" level="TRACE">Arguments: [ "//android.widget.EditText[@text='YYYY']" ]</msg>
<msg timestamp="20240428 21:33:49.088" level="INFO">Clicking element '//android.widget.EditText[@text='YYYY']'.</msg>
<msg timestamp="20240428 21:33:49.088" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.EditText[@text='YYYY']"}</msg>
<msg timestamp="20240428 21:33:49.216" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:49.216" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-002e00000004","ELEMENT":"00000000-0000-04ec-0000-002e00000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-X1D1yMRAkx3xx2QbLUhGMXxpvIE"', 'Date': 'Sun, 28 Apr 2024 15:33:49 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:49.216" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:49.216" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-002e00000004/click {"id": "00000000-0000-04ec-0000-002e00000004"}</msg>
<msg timestamp="20240428 21:33:49.276" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-002e00000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:49.276" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:49 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:49.276" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:49.276" level="INFO">xpath criteria: //android.widget.EditText[@text='YYYY']</msg>
<msg timestamp="20240428 21:33:49.276" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:49.088" endtime="20240428 21:33:49.276"/>
</kw>
<kw name="Enter Birthyear" library="CoCo_keywords">
<msg timestamp="20240428 21:33:49.276" level="TRACE">Arguments: [  ]</msg>
<kw name="Input Text" library="AppiumLibrary">
<arg>${birthyear}</arg>
<arg>1995</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20240428 21:33:49.276" level="TRACE">Arguments: [ "//android.widget.EditText[@text='YYYY']" | '1995' ]</msg>
<msg timestamp="20240428 21:33:49.276" level="INFO">Typing text '1995' into text field '//android.widget.EditText[@text='YYYY']'</msg>
<msg timestamp="20240428 21:33:49.276" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.EditText[@text='YYYY']"}</msg>
<msg timestamp="20240428 21:33:50.530" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:50.530" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-002e00000004","ELEMENT":"00000000-0000-04ec-0000-002e00000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-X1D1yMRAkx3xx2QbLUhGMXxpvIE"', 'Date': 'Sun, 28 Apr 2024 15:33:50 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:50.530" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:50.530" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-002e00000004/value {"text": "1995", "value": ["1", "9", "9", "5"], "id": "00000000-0000-04ec-0000-002e00000004"}</msg>
<msg timestamp="20240428 21:33:50.593" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-002e00000004/value HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:50.593" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:50 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:50.593" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:50.593" level="INFO">xpath criteria: //android.widget.EditText[@text='YYYY']</msg>
<msg timestamp="20240428 21:33:50.593" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:49.276" endtime="20240428 21:33:50.593"/>
</kw>
<msg timestamp="20240428 21:33:50.593" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:49.276" endtime="20240428 21:33:50.593"/>
</kw>
<kw name="Go Back" library="AppiumLibrary">
<doc>Goes one step backward in the browser history.</doc>
<msg timestamp="20240428 21:33:50.593" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20240428 21:33:50.593" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/back {}</msg>
<msg timestamp="20240428 21:33:50.704" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/back HTTP/1.1" 200 65</msg>
<msg timestamp="20240428 21:33:50.704" level="DEBUG">Remote response: status=200 | data={"sessionId":"9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc","value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '65', 'ETag': 'W/"41-3k6Peq0o5ihOGBlnX0y++l5RlrU"', 'Date': 'Sun, 28 Apr 2024 15:33:50 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:50.704" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:50.704" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:50.593" endtime="20240428 21:33:50.704"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:50.704" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:33:52.719" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:33:52.719" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:50.704" endtime="20240428 21:33:52.719"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${choose}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:52.719" level="TRACE">Arguments: [ "//android.widget.Button[@content-desc='Choose']" ]</msg>
<msg timestamp="20240428 21:33:52.719" level="INFO">Clicking element '//android.widget.Button[@content-desc='Choose']'.</msg>
<msg timestamp="20240428 21:33:52.719" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.Button[@content-desc='Choose']"}</msg>
<msg timestamp="20240428 21:33:52.845" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:52.845" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-003200000004","ELEMENT":"00000000-0000-04ec-0000-003200000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-enxUBhxgfF6reYezGBqs6Z2SDdA"', 'Date': 'Sun, 28 Apr 2024 15:33:52 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:52.845" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:52.845" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-003200000004/click {"id": "00000000-0000-04ec-0000-003200000004"}</msg>
<msg timestamp="20240428 21:33:52.924" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-003200000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:52.924" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:52 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:52.924" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:52.924" level="INFO">xpath criteria: //android.widget.Button[@content-desc='Choose']</msg>
<msg timestamp="20240428 21:33:52.924" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:52.719" endtime="20240428 21:33:52.924"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:52.924" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:33:54.935" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:33:54.935" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:52.924" endtime="20240428 21:33:54.935"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${degree}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:54.935" level="TRACE">Arguments: [ "//android.view.View[@content-desc='Completed a university degree or more']" ]</msg>
<msg timestamp="20240428 21:33:54.935" level="INFO">Clicking element '//android.view.View[@content-desc='Completed a university degree or more']'.</msg>
<msg timestamp="20240428 21:33:54.935" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.view.View[@content-desc='Completed a university degree or more']"}</msg>
<msg timestamp="20240428 21:33:55.061" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:55.061" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-003d00000004","ELEMENT":"00000000-0000-04ec-0000-003d00000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-pZBzxXa5nlFleCVCKc5vfpbY2EM"', 'Date': 'Sun, 28 Apr 2024 15:33:55 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:55.061" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:55.061" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-003d00000004/click {"id": "00000000-0000-04ec-0000-003d00000004"}</msg>
<msg timestamp="20240428 21:33:56.146" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-003d00000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:56.146" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:56 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:56.146" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:56.146" level="INFO">xpath criteria: //android.view.View[@content-desc='Completed a university degree or more']</msg>
<msg timestamp="20240428 21:33:56.146" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:54.935" endtime="20240428 21:33:56.146"/>
</kw>
<kw name="Go Back" library="AppiumLibrary">
<doc>Goes one step backward in the browser history.</doc>
<msg timestamp="20240428 21:33:56.148" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20240428 21:33:56.148" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/back {}</msg>
<msg timestamp="20240428 21:33:56.294" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/back HTTP/1.1" 200 65</msg>
<msg timestamp="20240428 21:33:56.297" level="DEBUG">Remote response: status=200 | data={"sessionId":"9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc","value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '65', 'ETag': 'W/"41-3k6Peq0o5ihOGBlnX0y++l5RlrU"', 'Date': 'Sun, 28 Apr 2024 15:33:56 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:56.297" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:56.297" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:56.146" endtime="20240428 21:33:56.297"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:56.297" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:33:58.303" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:33:58.303" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:56.297" endtime="20240428 21:33:58.303"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${startsession2}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:33:58.303" level="TRACE">Arguments: [ "//android.widget.Button[@content-desc='Start Session']" ]</msg>
<msg timestamp="20240428 21:33:58.303" level="INFO">Clicking element '//android.widget.Button[@content-desc='Start Session']'.</msg>
<msg timestamp="20240428 21:33:58.303" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.Button[@content-desc='Start Session']"}</msg>
<msg timestamp="20240428 21:33:58.429" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:33:58.429" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-003100000004","ELEMENT":"00000000-0000-04ec-0000-003100000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-DszzPWHDQpGvvzkrqOpe36Z8b3Y"', 'Date': 'Sun, 28 Apr 2024 15:33:58 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:58.429" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:58.429" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-003100000004/click {"id": "00000000-0000-04ec-0000-003100000004"}</msg>
<msg timestamp="20240428 21:33:59.260" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-003100000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:33:59.260" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:33:59 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:33:59.260" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:33:59.260" level="INFO">xpath criteria: //android.widget.Button[@content-desc='Start Session']</msg>
<msg timestamp="20240428 21:33:59.260" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:58.303" endtime="20240428 21:33:59.260"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:33:59.260" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:34:01.266" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:34:01.266" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:33:59.260" endtime="20240428 21:34:01.266"/>
</kw>
<kw name="Question 1" library="CoCo_keywords">
<msg timestamp="20240428 21:34:01.266" level="TRACE">Arguments: [  ]</msg>
<kw name="Click Element" library="AppiumLibrary">
<arg>${q1_no}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:34:01.266" level="TRACE">Arguments: [ "//android.view.View[@content-desc='Have you ever had sex?']/android.widget.ImageView[4]" ]</msg>
<msg timestamp="20240428 21:34:01.266" level="INFO">Clicking element '//android.view.View[@content-desc='Have you ever had sex?']/android.widget.ImageView[4]'.</msg>
<msg timestamp="20240428 21:34:01.266" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.view.View[@content-desc='Have you ever had sex?']/android.widget.ImageView[4]"}</msg>
<msg timestamp="20240428 21:34:01.372" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:34:01.372" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-004800000004","ELEMENT":"00000000-0000-04ec-0000-004800000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-/f/jQv/Vd4jMb2oc5HbJKO0pnTk"', 'Date': 'Sun, 28 Apr 2024 15:34:01 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:01.372" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:01.372" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-004800000004/click {"id": "00000000-0000-04ec-0000-004800000004"}</msg>
<msg timestamp="20240428 21:34:01.441" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-004800000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:34:01.443" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:34:01 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:01.443" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:01.443" level="INFO">xpath criteria: //android.view.View[@content-desc='Have you ever had sex?']/android.widget.ImageView[4]</msg>
<msg timestamp="20240428 21:34:01.443" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:01.266" endtime="20240428 21:34:01.443"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:34:01.443" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:34:03.447" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:34:03.447" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:01.443" endtime="20240428 21:34:03.447"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${q1_next}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:34:03.447" level="TRACE">Arguments: [ "//android.widget.Button[@content-desc='Next']" ]</msg>
<msg timestamp="20240428 21:34:03.447" level="INFO">Clicking element '//android.widget.Button[@content-desc='Next']'.</msg>
<msg timestamp="20240428 21:34:03.447" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.Button[@content-desc='Next']"}</msg>
<msg timestamp="20240428 21:34:03.542" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:34:03.542" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-004c00000004","ELEMENT":"00000000-0000-04ec-0000-004c00000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-K3vllvjA+6n3HZVfCJI//XYG89g"', 'Date': 'Sun, 28 Apr 2024 15:34:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:03.542" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:03.542" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-004c00000004/click {"id": "00000000-0000-04ec-0000-004c00000004"}</msg>
<msg timestamp="20240428 21:34:04.184" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-004c00000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:34:04.184" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:34:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:04.184" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:04.184" level="INFO">xpath criteria: //android.widget.Button[@content-desc='Next']</msg>
<msg timestamp="20240428 21:34:04.184" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:03.447" endtime="20240428 21:34:04.184"/>
</kw>
<msg timestamp="20240428 21:34:04.184" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:01.266" endtime="20240428 21:34:04.184"/>
</kw>
<kw name="Question 6" library="CoCo_keywords">
<msg timestamp="20240428 21:34:04.184" level="TRACE">Arguments: [  ]</msg>
<kw name="Click Element" library="AppiumLibrary">
<arg>${q6_now}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:34:04.184" level="TRACE">Arguments: [ "//android.widget.RadioButton[@content-desc='Now']" ]</msg>
<msg timestamp="20240428 21:34:04.184" level="INFO">Clicking element '//android.widget.RadioButton[@content-desc='Now']'.</msg>
<msg timestamp="20240428 21:34:04.184" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.RadioButton[@content-desc='Now']"}</msg>
<msg timestamp="20240428 21:34:04.310" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:34:04.310" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-005300000004","ELEMENT":"00000000-0000-04ec-0000-005300000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-AhyNi5yqaFrrymdpcksHalafkT0"', 'Date': 'Sun, 28 Apr 2024 15:34:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:04.310" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:04.310" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-005300000004/click {"id": "00000000-0000-04ec-0000-005300000004"}</msg>
<msg timestamp="20240428 21:34:04.892" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-005300000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:34:04.892" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:34:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:04.892" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:04.892" level="INFO">xpath criteria: //android.widget.RadioButton[@content-desc='Now']</msg>
<msg timestamp="20240428 21:34:04.892" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:04.184" endtime="20240428 21:34:04.892"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:34:04.892" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:34:06.902" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:34:06.902" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:04.892" endtime="20240428 21:34:06.902"/>
</kw>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>50</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<msg timestamp="20240428 21:34:06.902" level="TRACE">Arguments: [ '50' | '90' | '50' | '10' ]</msg>
<msg timestamp="20240428 21:34:06.902" level="DEBUG">GET http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/window/rect {}</msg>
<msg timestamp="20240428 21:34:06.918" level="DEBUG">http://localhost:4723 "GET /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/window/rect HTTP/1.1" 200 49</msg>
<msg timestamp="20240428 21:34:06.918" level="DEBUG">Remote response: status=200 | data={"value":{"width":1024,"height":600,"x":0,"y":0}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '49', 'ETag': 'W/"31-EBSmie5/1Cr24ZUubENun57+4uI"', 'Date': 'Sun, 28 Apr 2024 15:34:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:06.918" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:06.918" level="DEBUG">GET http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/window/rect {}</msg>
<msg timestamp="20240428 21:34:06.949" level="DEBUG">http://localhost:4723 "GET /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/window/rect HTTP/1.1" 200 49</msg>
<msg timestamp="20240428 21:34:06.949" level="DEBUG">Remote response: status=200 | data={"value":{"width":1024,"height":600,"x":0,"y":0}} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '49', 'ETag': 'W/"31-EBSmie5/1Cr24ZUubENun57+4uI"', 'Date': 'Sun, 28 Apr 2024 15:34:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:06.949" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:06.949" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/actions {"actions": [{"type": "pointer", "parameters": {"pointerType": "touch"}, "id": "touch", "actions": [{"type": "pointerMove", "duration": 250, "x": 512, "y": 540, "origin": "viewport"}, {"type": "pointerDown", "duration": 0, "button": 0}, {"type": "pointerMove", "duration": 1000, "x": 512, "y": 60, "origin": "viewport"}, {"type": "pointerUp", "duration": 0, "button": 0}]}]}</msg>
<msg timestamp="20240428 21:34:08.321" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/actions HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:34:08.323" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:34:08 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:08.323" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:08.323" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:06.902" endtime="20240428 21:34:08.323"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240428 21:34:08.323" level="TRACE">Arguments: [ '2 Seconds' ]</msg>
<msg timestamp="20240428 21:34:10.325" level="INFO">Slept 2 seconds</msg>
<msg timestamp="20240428 21:34:10.325" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:08.323" endtime="20240428 21:34:10.325"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${q6_next}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:34:10.325" level="TRACE">Arguments: [ "//android.widget.Button[@content-desc='Next']" ]</msg>
<msg timestamp="20240428 21:34:10.325" level="INFO">Clicking element '//android.widget.Button[@content-desc='Next']'.</msg>
<msg timestamp="20240428 21:34:10.325" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.Button[@content-desc='Next']"}</msg>
<msg timestamp="20240428 21:34:10.452" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 139</msg>
<msg timestamp="20240428 21:34:10.452" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"00000000-0000-04ec-0000-005200000004","ELEMENT":"00000000-0000-04ec-0000-005200000004"}]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '139', 'ETag': 'W/"8b-GN3kJ1wwrQShGn80K7m5XAIoC+0"', 'Date': 'Sun, 28 Apr 2024 15:34:10 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:10.452" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:10.452" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-005200000004/click {"id": "00000000-0000-04ec-0000-005200000004"}</msg>
<msg timestamp="20240428 21:34:11.583" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/element/00000000-0000-04ec-0000-005200000004/click HTTP/1.1" 200 14</msg>
<msg timestamp="20240428 21:34:11.583" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '14', 'ETag': 'W/"e-9/1BuKMgFObM1mWJm+YjxtXJnUM"', 'Date': 'Sun, 28 Apr 2024 15:34:11 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:11.583" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:11.583" level="INFO">xpath criteria: //android.widget.Button[@content-desc='Next']</msg>
<msg timestamp="20240428 21:34:11.583" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:10.325" endtime="20240428 21:34:11.583"/>
</kw>
<msg timestamp="20240428 21:34:11.583" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:04.184" endtime="20240428 21:34:11.583"/>
</kw>
<kw name="Question 8_1" library="CoCo_keywords">
<msg timestamp="20240428 21:34:11.598" level="TRACE">Arguments: [  ]</msg>
<kw name="Click Element" library="AppiumLibrary">
<arg>${q8_1_seek}</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240428 21:34:11.598" level="TRACE">Arguments: [ "//android.widget.SeekBar[@content-desc='52%']" ]</msg>
<msg timestamp="20240428 21:34:11.598" level="INFO">Clicking element '//android.widget.SeekBar[@content-desc='52%']'.</msg>
<msg timestamp="20240428 21:34:11.598" level="DEBUG">POST http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements {"using": "xpath", "value": "//android.widget.SeekBar[@content-desc='52%']"}</msg>
<msg timestamp="20240428 21:34:11.708" level="DEBUG">http://localhost:4723 "POST /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20240428 21:34:11.708" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Vary': 'X-HTTP-Method-Override', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '12', 'ETag': 'W/"c-ct3goOI+b+kRZv2R9j2fTtMXwkk"', 'Date': 'Sun, 28 Apr 2024 15:34:11 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:11.708" level="DEBUG">Finished Request</msg>
<kw name="Capture Page Screenshot" library="AppiumLibrary">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20240428 21:34:11.708" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20240428 21:34:11.708" level="DEBUG">GET http://localhost:4723/session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/screenshot {}</msg>
<msg timestamp="20240428 21:34:12.240" level="DEBUG">http://localhost:4723 "GET /session/9bc9e0c6-2f11-46ff-b844-ba7bcc3fd4cc/screenshot HTTP/1.1" 200 63908</msg>
<msg timestamp="20240428 21:34:12.240" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '63908', 'ETag': 'W/"f9a4-OIZZACZA8DftmZYOe6cKZRw9nyk"', 'Date': 'Sun, 28 Apr 2024 15:34:12 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=600'})</msg>
<msg timestamp="20240428 21:34:12.240" level="DEBUG">Finished Request</msg>
<msg timestamp="20240428 21:34:12.240" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<msg timestamp="20240428 21:34:12.240" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20240428 21:34:11.708" endtime="20240428 21:34:12.240"/>
</kw>
<msg timestamp="20240428 21:34:12.240" level="INFO">xpath criteria: //android.widget.SeekBar[@content-desc='52%']</msg>
<msg timestamp="20240428 21:34:12.240" level="FAIL">ValueError: Element locator '//android.widget.SeekBar[@content-desc='52%']' did not match any elements.</msg>
<msg timestamp="20240428 21:34:12.240" level="DEBUG">Traceback (most recent call last):
  File "C:\Users\newaj\AppData\Roaming\Python\Python310\site-packages\decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "C:\Users\newaj\AppData\Roaming\Python\Python310\site-packages\AppiumLibrary\keywords\keywordgroup.py", line 21, in _run_on_failure_decorator
    raise err
  File "C:\Users\newaj\AppData\Roaming\Python\Python310\site-packages\AppiumLibrary\keywords\keywordgroup.py", line 16, in _run_on_failure_decorator
    return method(*args, **kwargs)
  File "C:\Users\newaj\AppData\Roaming\Python\Python310\site-packages\AppiumLibrary\keywords\_element.py", line 43, in click_element
    self._element_find(locator, True, True).click()
  File "C:\Users\newaj\AppData\Roaming\Python\Python310\site-packages\AppiumLibrary\keywords\_element.py", line 642, in _element_find
    raise ValueError("Element locator '" + locator + "' did not match any elements.")
ValueError: Element locator '//android.widget.SeekBar[@content-desc='52%']' did not match any elements.</msg>
<status status="FAIL" starttime="20240428 21:34:11.598" endtime="20240428 21:34:12.240"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2 Seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240428 21:34:12.240" endtime="20240428 21:34:12.240"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>${q8_next}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="NOT RUN" starttime="20240428 21:34:12.240" endtime="20240428 21:34:12.240"/>
</kw>
<status status="FAIL" starttime="20240428 21:34:11.598" endtime="20240428 21:34:12.240"/>
</kw>
<status status="FAIL" starttime="20240428 21:33:17.945" endtime="20240428 21:34:12.240">ValueError: Element locator '//android.widget.SeekBar[@content-desc='52%']' did not match any elements.</status>
</test>
<status status="FAIL" starttime="20240428 21:33:17.757" endtime="20240428 21:34:12.240"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Start-Session">Start-Session</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
